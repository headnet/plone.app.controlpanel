Search control panel
====================

First some initial setup code:

    >>> from Products.CMFCore.utils import getToolByName
    >>> jstool = getToolByName(layer['portal'], 'portal_javascripts')
    >>> from plone.testing.z2 import Browser
    >>> browser = Browser(layer['app'])

Login as manager
    >>> loginAsManager(browser)

Viewing the search control panel
--------------------------------

    >>> browser.open('http://nohost/plone/@@search-controlpanel')
    >>> browser.url.endswith('search-controlpanel')
    True

Click the save button without making any changes:

    >>> browser.getControl(name="form.actions.save").click()
    >>> browser.url.endswith('search-controlpanel')
    True

We should get a status message:

    >>> 'Changes saved.' in browser.contents
    True

Now click the cancel button:

    >>> browser.getControl(name="form.actions.cancel").click()
    >>> browser.url.endswith('plone_control_panel')
    True

There should be still no changes:

    >>> 'Changes canceled.' in browser.contents
    True

Make some changes
-----------------

    >>> browser.open('http://nohost/plone/@@search-controlpanel')
    >>> browser.url.endswith('search-controlpanel')
    True

    >>> browser.getControl(name='form.enable_livesearch').value = False
    >>> browser.getControl(name='form.types_not_searched').value = \
    ...     ['Event', 'Document']


Click the save button:

    >>> browser.getControl(name="form.actions.save").click()
    >>> browser.url.endswith('search-controlpanel')
    True

We should be informed that something has changed:

    >>> 'Changes saved.' in browser.contents
    True

Make sure the changes have been applied correctly to the tool:

    >>> ptool = getToolByName(layer['portal'], 'portal_properties')
    >>> site_props = ptool.site_properties
    >>> site_props.enable_livesearch
    False

    >>> jstool.getResource('livesearch.js').getEnabled()
    False

    >>> 'Event' not in site_props.types_not_searched
    True

    >>> 'Document' not in site_props.types_not_searched
    True

    >>> 'File' in site_props.types_not_searched
    True

So called 'bad types' are not listed in the search panel, but they
should still be listed in the site_properties as not searchable:

    >>> from plone.app.vocabularies.types import BAD_TYPES
    >>> [bad for bad in BAD_TYPES if bad not in site_props.types_not_searched]
    []


